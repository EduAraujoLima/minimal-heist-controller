// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Heist {
  id         String      @id @default(cuid())
  name       String
  location   String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  HeistFinal HeistFinal?
}

model Target {
  id              String       @id @default(cuid())
  name            String
  type            TargetType   @relation(fields: [targetTypeId], references: [id])
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  normalModeValue Int
  hardModeValue   Int
  targetTypeId    String
  Heist           HeistFinal[]
  secondaryTarget HeistFinal[] @relation("SecondaryTargets")
}

model Member {
  id           String      @id @default(cuid())
  name         String
  rank         Int
  avatar       String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  HeistFinal   HeistFinal? @relation(fields: [heistFinalId], references: [id])
  heistFinalId String?
}

model CrewMember {
  id             String       @id @default(cuid())
  name           String
  habilityLevel  Int
  avatar         String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  HeistFinal     HeistFinal?  @relation(fields: [heistFinalId], references: [id])
  heistFinalId   String?
  category       CrewCategory @relation(fields: [crewCategoryId], references: [id])
  categoryId     String
  crewCategoryId String
}

model HeistFinal {
  id               String          @id @default(cuid())
  Heist            Heist           @relation(fields: [heistId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  heistId          String          @unique
  members          Member[]
  difficulty       HeistDifficulty @relation(fields: [difficultyId], references: [id])
  difficultyId     String
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  primaryTarget    Target          @relation(fields: [targetId], references: [id])
  secondaryTargets Target[]        @relation("SecondaryTargets")
  targetId         String
  CrewMember       CrewMember[]
}

model TargetType {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Target    Target[]
}

model HeistDifficulty {
  id         String       @id @default(cuid())
  name       String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  HeistFinal HeistFinal[]
}

model CrewCategory {
  id         String       @id @default(cuid())
  name       String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  CrewMember CrewMember[]
}
